@prefix plandesc: <http://www.ontologydesignpatterns.org/cp/owl/basicplandescription.owl#> .
@prefix pwo: <http://purl.org/spar/pwo/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix taskrole: <http://www.ontologydesignpatterns.org/cp/owl/taskrole.owl#> .

pwo:hasStep
  a rdf:Property ;
  rdfs:label "has step"@en ;
  rdfs:comment "The property linking a workflow to a component step."@en ;
  rdfs:domain pwo:Workflow ;
  rdfs:range pwo:Step ;
  rdfs:subPropertyOf plandesc:definesTask ;
.

pwo:hasFirstStep
  a rdf:Property ;
  rdfs:label "has first step"@en ;
  rdfs:comment "T workflow that starts with a particular step."@en ;
  rdfs:subPropertyOf pwo:hasStep ;
.

pwo:Step
  a rdfs:Class ;
  rdfs:label "step"@en ;
  rdfs:comment "An atomic unit of a workflow, that may be characterized by a starting time and an ending time, and may be associated with one or more events.  T workflow step usually involves some input information, material or energy needed to complete the step, and some output information, material or energy produced by that step.  In the case of a publishing workflow, a step typically results in the creation of a publication entity, usually by the modification of another pre-existing publication entity, e.g. the creation of an edited paper from a rough draft, or of an HTML representation from an XML mark-up."@en ;
  rdfs:subClassOf taskrole:Task ;
.

pwo:Workflow
  a rdfs:Class ;
  rdfs:label "workflow"@en ;
  rdfs:comment "T sequence of connected steps, representing a sequence of publishing operations undertaken by agents. T workflow may be seen as an abstract model of real work."@en ;
  rdfs:subClassOf plandesc:Plan ;
.

pwo:CannotHaveMultipleFirstSteps
  a sh:PropertyShape ;
  sh:targetSubjectsOf pwo:hasFirstStep ;
  sh:path pwo:hasFirstStep ;
  sh:maxCount 1 ;
.

pwo:FirstStepCannotHavePreviousStep
  a sh:PropertyShape ;
  sh:targetObjectsOf pwo:hasFirstStep ;
  sh:path pwo:hasPreviousStep ;
  sh:maxCount 0 ;
.
